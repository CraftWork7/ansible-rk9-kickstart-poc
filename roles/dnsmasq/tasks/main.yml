---
- name: Install dnsmasq package
  ansible.builtin.package:
    name:
      - dnsmasq
      - syslinux
      - syslinux-tftpboot
    state: present
  tags:
    - dnsmasq
    - syslinux
    - package_install

- name: Configure dnsmasq for PXE and DHCP
  ansible.builtin.template:
    src: dnsmasq.conf.j2
    dest: /etc/dnsmasq.conf
    mode: '0644'
  notify:
    - Restart dnsmasq
  tags:
    - dnsmasq
    - pxe

- name: Ensure dnsmasq is started and enabled
  ansible.builtin.service:
    name: dnsmasq
    state: started
    enabled: true
  tags:
    - dnsmasq
    - service


- name: Create PXE boot directory structure
  ansible.builtin.file:
    path: "/tftpboot/{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - pxelinux.cfg
    - images
    - kickstart


- name: Copy PXE boot configuration file
  ansible.builtin.template:
    src: default_pxe_boot_config.cfg.j2
    dest: "/tftpboot/pxelinux.cfg/default"
    mode: "0744"
  tags:
    - pxe
    - configure

- name: Copy kickstart configuration
  ansible.builtin.template:
    src: kickstart.cfg.j2
    dest: "/tftpboot/kickstart/ks.cfg"
    mode: "0744"
  tags:
    - pxe
    - configure


# syslinux-tftpboot replaces the below
# - name: Copy menu.c32 and pxelinux.0
#   ansible.builtin.copy:
#     src: "{{ item.src }}"
#     dest: "/tftpboot/{{ item.dest }}"
#     mode: "0644"
#     remote_src: true
#   loop:
#     - { src: "/usr/share/syslinux/menu.c32", dest: "menu.c32" }
#     - { src: "/usr/share/syslinux/pxelinux.0", dest: "pxelinux.0" }

- name: Download bootable kernel and initrd to TFTP
  ansible.builtin.get_url:
    url: "{{ item.src }}"
    dest: "/tftpboot/images/{{ item.dest }}"
    mode: '0644'
  loop:
    - { src: "{{ source_vmlinuz }}", dest: "vmlinuz" }
    - { src: "{{ source_initrd }}", dest: "initrd.img" }
